name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: user
          POSTGRES_DB: brandranker_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:6
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install Python dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx
    
    - name: Install Node.js dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run backend tests
      run: |
        cd backend
        python -m pytest tests/ -v
      env:
        DATABASE_URL: postgresql://user:password@localhost:5432/brandranker_test
        REDIS_URL: redis://localhost:6379
        SECRET_KEY: test-secret-key
        OPENAI_API_KEY: test-key
        PERPLEXITY_API_KEY: test-key
    
    - name: Run frontend tests
      run: |
        cd frontend
        npm test -- --watchAll=false --coverage
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
    
    - name: Lint backend
      run: |
        cd backend
        pip install flake8 black isort
        flake8 app/ --max-line-length=88 --extend-ignore=E203,W503
        black --check app/
        isort --check-only app/
    
    - name: Lint frontend
      run: |
        cd frontend
        npm run lint

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Run security scan
      run: |
        pip install bandit safety
        cd backend
        bandit -r app/ -f json -o bandit-report.json || true
        safety check --json --output safety-report.json || true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          backend/bandit-report.json
          backend/safety-report.json

  deploy:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Build and test
      run: |
        # Backend
        cd backend
        pip install -r requirements.txt
        python -m pytest tests/ -v
        
        # Frontend
        cd ../frontend
        npm ci
        npm test -- --watchAll=false
        npm run build
    
    - name: Deploy to production
      run: |
        echo "Deployment would happen here"
        echo "This could deploy to:"
        echo "- Heroku"
        echo "- AWS"
        echo "- Google Cloud"
        echo "- DigitalOcean"
        echo "- Vercel (for frontend)"
        echo "- Railway"
        echo "- Render"
    
    - name: Notify deployment
      run: |
        echo "Deployment completed successfully!"
        echo "Application is now live at: https://your-app-url.com" 